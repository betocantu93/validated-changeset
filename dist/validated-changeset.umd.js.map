{"version":3,"file":"validated-changeset.umd.js","sources":["../src/utils/is-object.ts","../src/-private/change.ts","../src/-private/err.ts","../src/utils/get-key-values.ts","../src/utils/is-promise.ts","../src/utils/handle-multiple-validations.ts","../src/utils/get-deep.ts","../src/utils/validator-lookup.ts","../src/-private/notifier.ts","../src/-private/evented.ts","../src/utils/has-key.ts","../src/utils/normalize-object.ts","../src/utils/has-changes.ts","../src/utils/assign.ts","../src/utils/flatten-validations.ts","../src/utils/is-changeset.ts","../src/utils/key-in-object.ts","../src/utils/array-object.ts","../src/utils/set-deep.ts","../src/utils/merge-nested.ts","../src/utils/build-old-values.ts","../src/utils/merge-deep.ts","../src/utils/object-tree-node.ts","../src/utils/object-without.ts","../src/utils/take.ts","../src/index.ts"],"sourcesContent":["export default function isObject<T>(val: T): boolean {\n  return (\n    val !== null &&\n    typeof val === 'object' &&\n    !(val instanceof Date || val instanceof RegExp) &&\n    !Array.isArray(val)\n  );\n}\n","/* import { IChange } from '../types'; */\nimport isObject from '../utils/is-object';\n\nexport const VALUE = Symbol('__value__');\n\nexport default class Change {\n  [VALUE]: unknown;\n\n  constructor(value: unknown) {\n    this[VALUE] = value;\n  }\n}\n\n// TODO: not sure why this function type guard isn't working\nexport const isChange = (maybeChange: unknown): maybeChange is Change =>\n  isObject(maybeChange) && VALUE in (maybeChange as any);\n\nexport function getChangeValue(maybeChange: Change | unknown): any {\n  if (isChange(maybeChange)) {\n    return maybeChange[VALUE];\n  }\n}\n","import { IErr, ValidationErr } from '../types';\n\nexport default class Err implements IErr<any> {\n  value: any;\n  validation: ValidationErr | ValidationErr[];\n\n  constructor(value: any, validation: ValidationErr | ValidationErr[]) {\n    this.value = value;\n    this.validation = validation;\n  }\n}\n","import { getChangeValue, isChange } from '../-private/change';\nimport isObject from './is-object';\nimport Err from '../-private/err';\nimport { PublicErrors } from '../types';\n\n/**\n * traverse through target and return leaf nodes with `value` property and key as 'person.name'\n *\n * @method getKeyValues\n * @return {Array} [{ 'person.name': value }]\n */\nexport function getKeyValues<T extends Record<string, any>>(\n  obj: T,\n  keysUpToValue: Array<string> = []\n): Record<string, any>[] {\n  const map = [];\n\n  for (let key in obj) {\n    if (obj[key] && isObject(obj[key])) {\n      if (isChange(obj[key])) {\n        map.push({ key: [...keysUpToValue, key].join('.'), value: getChangeValue(obj[key]) });\n      } else {\n        map.push(...getKeyValues(obj[key], [...keysUpToValue, key]));\n      }\n    }\n  }\n\n  return map;\n}\n\n/**\n * traverse through target and return leaf nodes with `value` property and key as 'person.name'\n *\n * @method getKeyErrorValues\n * @return {Array} [{ key: 'person.name', validation: '', value: '' }]\n */\nexport function getKeyErrorValues<T extends Record<string, any>>(\n  obj: T,\n  keysUpToValue: Array<string> = []\n): PublicErrors {\n  let map = [];\n\n  for (let key in obj) {\n    if (obj[key] && isObject(obj[key])) {\n      if (\n        Object.prototype.hasOwnProperty.call(obj[key], 'value') &&\n        (obj[key] as any) instanceof Err\n      ) {\n        map.push({\n          key: [...keysUpToValue, key].join('.'),\n          validation: obj[key].validation,\n          value: obj[key].value\n        });\n      } else if (key !== 'value') {\n        map.push(...getKeyErrorValues(obj[key], [...keysUpToValue, key]));\n      }\n    }\n  }\n\n  return map;\n}\n","import isObject from './is-object';\n\nfunction isPromiseLike(obj: any): boolean {\n  return (\n    !!obj &&\n    !!obj.then &&\n    !!obj.catch &&\n    !!obj.finally &&\n    typeof obj.then === 'function' &&\n    typeof obj.catch === 'function' &&\n    typeof obj.finally === 'function'\n  );\n}\n\nexport default function isPromise(obj: any): boolean {\n  return isObject(obj) && isPromiseLike(obj);\n}\n","import isPromise from './is-promise';\nimport { ValidatorMapFunc, ValidationResult, ValidatorClass } from '../types';\n\n/**\n * Rejects `true` values from an array of validations. Returns `true` when there\n * are no errors, or the error object if there are errors.\n *\n * @private\n * @param  {Array} validations\n * @return {Promise<boolean|Any>}\n */\nasync function handleValidationsAsync(\n  validations: Array<ValidationResult | Promise<ValidationResult>>\n): Promise<any> {\n  try {\n    const result = await Promise.all(validations);\n\n    const maybeFailed = result.filter(val => typeof val !== 'boolean' && val);\n    return maybeFailed.length === 0 || maybeFailed;\n  } catch (e) {\n    return e;\n  }\n}\n\n/**\n * Rejects `true` values from an array of validations. Returns `true` when there\n * are no errors, or the error object if there are errors.\n *\n * @private\n * @param  {Array} validations\n * @return {boolean|Any}\n */\nfunction handleValidationsSync(validations: Array<ValidationResult>): boolean | any {\n  const maybeFailed = validations.filter(val => typeof val !== 'boolean' && val);\n  return maybeFailed.length === 0 || maybeFailed;\n}\n/**\n * Handles an array of validators and returns Promise.all if any value is a\n * Promise.\n *\n * @public\n * @param  {Array} validators Array of validator functions\n * @param  {String} options.key\n * @param  {Any} options.newValue\n * @param  {Any} options.oldValue\n * @param  {Object} options.changes\n * @param  {Object} options.content\n * @return {Promise|boolean|Any}\n */\nexport default function handleMultipleValidations(\n  validators: Array<ValidatorMapFunc | ValidatorClass>,\n  { key, newValue, oldValue, changes, content }: { [s: string]: any }\n): boolean | any {\n  let validations: Array<ValidationResult | Promise<ValidationResult>> = Array.from(\n    validators.map((validator: ValidatorMapFunc | ValidatorClass):\n      | ValidationResult\n      | Promise<ValidationResult> => {\n      const isValidatorClass = (maybeClass: unknown): maybeClass is ValidatorClass =>\n        !!(maybeClass as Record<string, any>).validate;\n      if (validator && isValidatorClass(validator)) {\n        validator = validator.validate.bind(validator);\n      }\n\n      return validator(key, newValue, oldValue, changes, content);\n    })\n  );\n\n  if (validations.some(isPromise)) {\n    return Promise.all(validations).then(handleValidationsAsync);\n  }\n\n  return handleValidationsSync(validations as Array<ValidationResult>);\n}\n","import { isChange, getChangeValue } from '../-private/change';\n\n/**\n * Handles both single key or nested string keys ('person.name')\n *\n * @method getDeep\n */\nexport default function getDeep<T extends Record<string, any>>(\n  root: T,\n  path: string | string[]\n): any {\n  let obj: T = root;\n\n  if (path.indexOf('.') === -1) {\n    return obj[path as string];\n  }\n  const parts: string[] = typeof path === 'string' ? path.split('.') : path;\n\n  for (let i = 0; i < parts.length; i++) {\n    if (obj === undefined || obj === null) {\n      return undefined;\n    }\n\n    // next iteration has next level\n    obj = obj[parts[i]];\n  }\n\n  return obj;\n}\n\n/**\n * Returns subObject while skipping `Change` instances\n *\n * @method getSubObject\n */\nexport function getSubObject<T extends Record<string, any>>(root: T, path: string | string[]): any {\n  let obj: T = root;\n\n  if (path.indexOf('.') === -1) {\n    return obj[path as string];\n  }\n\n  const parts: string[] = typeof path === 'string' ? path.split('.') : path;\n\n  for (let i = 0; i < parts.length; i++) {\n    if (obj === undefined || obj === null) {\n      return undefined;\n    }\n\n    if (isChange(obj[parts[i]])) {\n      obj = getChangeValue(obj[parts[i]]);\n    } else {\n      obj = obj[parts[i]];\n    }\n  }\n\n  return obj;\n}\n","import handleMultipleValidations from './handle-multiple-validations';\nimport isPromise from './is-promise';\nimport isObject from './is-object';\nimport {\n  ValidatorAction,\n  ValidatorMapFunc,\n  ValidatorClass,\n  ValidationResult,\n  ValidatorMap\n} from '../types';\nimport get from './get-deep';\n\n/**\n * returns a closure to lookup and validate k/v pairs set on a changeset\n *\n * @method lookupValidator\n * @param validationMap\n */\nexport default function lookupValidator(validationMap: ValidatorMap): ValidatorAction {\n  return ({ key, newValue, oldValue, changes, content }) => {\n    const validations = validationMap || {};\n    let validator:\n      | ValidatorMapFunc\n      | ValidatorMapFunc[]\n      | ValidatorClass\n      | ValidatorClass[]\n      | Array<ValidatorMapFunc | ValidatorClass> = get(validations, key);\n    const isValidatorClass = (maybeClass: unknown): maybeClass is ValidatorClass =>\n      !!(maybeClass as Record<string, any>).validate;\n    if (validator && isValidatorClass(validator)) {\n      validator = validator.validate.bind(validator);\n    }\n\n    if (!validator || isObject(validator)) {\n      return true;\n    }\n\n    let validation: ValidationResult | Promise<ValidationResult>;\n    if (Array.isArray(validator)) {\n      validation = handleMultipleValidations(validator, {\n        key,\n        newValue,\n        oldValue,\n        changes,\n        content\n      });\n    } else {\n      validation = (validator as ValidatorMapFunc)(key, newValue, oldValue, changes, content);\n    }\n\n    return isPromise(validation)\n      ? (validation as Promise<ValidationResult>).then(result => {\n          return result;\n        })\n      : validation;\n  };\n}\n","// this statefull class holds and notifies\n\nexport default class Notifier<T extends any[]> {\n  listeners: ((...args: T) => void)[];\n\n  constructor() {\n    this.listeners = [];\n  }\n\n  addListener(callback: (...args: T) => void) {\n    this.listeners.push(callback);\n    return () => this.removeListener(callback);\n  }\n\n  removeListener(callback: (...args: T) => void) {\n    for (let i = 0; i < this.listeners.length; i++) {\n      if (this.listeners[i] === callback) {\n        this.listeners.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  trigger(...args: T) {\n    this.listeners.forEach(callback => callback(...args));\n  }\n}\n","import Notifier from './notifier';\n\nexport function notifierForEvent(object: any, eventName: string) {\n  if (object._eventedNotifiers === undefined) {\n    object._eventedNotifiers = {};\n  }\n\n  let notifier = object._eventedNotifiers[eventName];\n\n  if (!notifier) {\n    notifier = object._eventedNotifiers[eventName] = new Notifier();\n  }\n\n  return notifier;\n}\n","import { getChangeValue, isChange } from '../-private/change';\n\nexport function hasKey(record: Record<string, any>, path: string, safeGet: Function): boolean {\n  const keys = path.split('.');\n\n  let obj = record;\n  for (const key of keys) {\n    if (!obj || !Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n\n    obj = safeGet(obj, key);\n    if (isChange(obj)) {\n      obj = getChangeValue(obj);\n    }\n  }\n\n  return true;\n}\n\nexport function pathInChanges(\n  record: Record<string, any>,\n  path: string,\n  safeGet: Function\n): boolean {\n  if (isChange(record)) {\n    return false;\n  }\n\n  const keys = path.split('.');\n\n  let obj = record;\n  for (const key of keys) {\n    if (!obj) {\n      return false;\n    }\n\n    if (keys[keys.length - 1] !== key && isChange(safeGet(obj, key))) {\n      return true;\n    }\n\n    obj = safeGet(obj, key);\n  }\n\n  return false;\n}\n","import { getChangeValue, isChange } from '../-private/change';\nimport isObject from './is-object';\n\n/**\n * traverse through target and unset `value` from leaf key so can access normally\n * {\n *  name: Change {\n *    value: 'Charles'\n *  }\n * }\n *\n * to\n *\n * {\n *  name: 'Charles'\n * }\n *\n * Shallow copy here is fine because we are swapping out the leaf nested object\n * rather than mutating a property in something with reference\n *\n * @method normalizeObject\n * @param {Object} target\n * @return {Object}\n */\nexport default function normalizeObject<T extends { [key: string]: any }>(\n  target: T,\n  isObj: Function = isObject\n): T {\n  if (!target || !isObj(target)) {\n    return target;\n  }\n\n  if (isChange(target)) {\n    return getChangeValue(target);\n  }\n\n  let obj = { ...target };\n\n  for (let key in obj) {\n    const next: any = obj[key];\n    if (next && isObj(next)) {\n      if (isChange(next)) {\n        obj[key] = getChangeValue(next);\n      } else {\n        try {\n          JSON.stringify(next);\n        } catch (e) {\n          break;\n        }\n        obj[key] = normalizeObject(next);\n      }\n    }\n  }\n\n  return obj;\n}\n","import isObject from './is-object';\nimport { isChange } from '../-private/change';\n\nexport function hasChanges(changes: Record<string, any>): boolean {\n  for (let key in changes) {\n    if (isChange(changes[key])) {\n      return true;\n    }\n\n    if (isObject(changes[key])) {\n      const isTruthy = hasChanges(changes[key]);\n      if (isTruthy) {\n        return isTruthy;\n      }\n    }\n  }\n\n  return false;\n}\n","let getOwnPropertyDescriptors: (obj: { [x: string]: any }) => { [x: string]: PropertyDescriptor };\n\nif (Object.getOwnPropertyDescriptors !== undefined) {\n  getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors;\n} else {\n  getOwnPropertyDescriptors = function(obj: object) {\n    let desc: Record<string, any> = {};\n\n    Object.keys(obj).forEach(key => {\n      desc[key] = Object.getOwnPropertyDescriptor(obj, key);\n    });\n\n    return desc;\n  };\n}\n\n// keep getters and setters\nexport default function pureAssign(...objects: object[]): object {\n  return objects.reduce((acc, obj) => {\n    return Object.defineProperties(acc, getOwnPropertyDescriptors(obj));\n  }, {});\n}\n","import isObject from './is-object';\n\nfunction flatten(\n  validatorMap: Record<string, any>,\n  obj: Record<string, any>,\n  keys: string[],\n  keysUpToFunction: Array<string> = []\n): object {\n  for (let key of keys) {\n    const value: any = validatorMap[key];\n    if (typeof value.validate === 'function') {\n      // class with .validate function\n      obj[key] = value;\n    } else if (isObject(value)) {\n      flatten(value, obj, Object.keys(value), [...keysUpToFunction, key]);\n    } else if (typeof value === 'function') {\n      const dotSeparatedKeys = [...keysUpToFunction, key].join('.');\n      obj[dotSeparatedKeys] = value;\n    } else if (Array.isArray(value)) {\n      const isAllFuncs: boolean = value.every(\n        item => typeof item === 'function' || typeof item.validate === 'function'\n      );\n      if (isAllFuncs) {\n        const dotSeparatedKeys = [...keysUpToFunction, key].join('.');\n        obj[dotSeparatedKeys] = value;\n      }\n    }\n  }\n\n  return obj;\n}\n\n/**\n * With nested validations, we flatten to a dot separated 'user.email': validationFunc\n * Once doing so, validation will happen with a single level key or dot separated key\n *\n * @method flattenValidations\n * @return {object}\n */\nexport function flattenValidations(validatorMap: Record<string, any>): object {\n  if (!validatorMap) {\n    return {};\n  }\n\n  let obj: Record<string, any> = {};\n  return flatten(validatorMap, obj, Object.keys(validatorMap));\n}\n","export const CHANGESET = '__CHANGESET__';\n\nexport default function isChangeset(changeset: any): boolean {\n  return changeset && changeset['__changeset__'] === CHANGESET;\n}\n","export default function keyInObject(obj: any, key: string): boolean {\n  let [baseKey, ...keys] = key.split('.');\n\n  if (!baseKey || !(baseKey in obj)) {\n    return false;\n  }\n\n  if (!keys.length) {\n    return !!obj[baseKey];\n  }\n\n  let value = obj[baseKey];\n  if (value !== null && typeof value === 'object') {\n    return keyInObject(obj[baseKey], keys.join('.'));\n  }\n\n  return false;\n}\n","export function isArrayObject(obj: Record<string, any>) {\n  if (!obj) return false;\n\n  let maybeIndicies = Object.keys(obj);\n\n  return maybeIndicies.every(key => Number.isInteger(parseInt(key, 10)));\n}\n\nexport function arrayToObject(array: any[]): Record<string, any> {\n  return array.reduce((obj, item, index) => {\n    obj[index] = item;\n    return obj;\n  }, {} as Record<string, any>);\n}\n\nexport function objectToArray(obj: Record<string, any>): any[] {\n  let result: any[] = [];\n\n  for (let [index, value] of Object.entries(obj)) {\n    result[parseInt(index, 10)] = value;\n  }\n\n  return result;\n}\n","import Change, { getChangeValue, isChange } from '../-private/change';\nimport isObject from './is-object';\nimport { isArrayObject } from './array-object';\n\ninterface Options {\n  safeSet?: any;\n  safeGet?: any;\n}\n\nfunction split(path: string): string[] {\n  const keys = path.split('.');\n\n  return keys;\n}\n\nfunction findSiblings(target: any, keys: string[]) {\n  const [leafKey] = keys.slice(-1);\n  const remaining = Object.keys(target)\n    .filter(k => k !== leafKey)\n    .reduce((acc, key) => {\n      acc[key] = target[key];\n      return acc;\n    }, Object.create(null));\n\n  return { ...remaining };\n}\n\nfunction isValidKey(key: unknown) {\n  return key !== '__proto__' && key !== 'constructor' && key !== 'prototype';\n}\n\n/**\n * TODO: consider\n * https://github.com/emberjs/ember.js/blob/822452c4432620fc67a777aba3b150098fd6812d/packages/%40ember/-internals/metal/lib/property_set.ts\n *\n * Handles both single path or nested string paths ('person.name')\n *\n * @method setDeep\n */\nexport default function setDeep(\n  target: any,\n  path: string,\n  value: unknown,\n  options: Options = { safeSet: undefined, safeGet: undefined }\n): any {\n  const keys = split(path).filter(isValidKey);\n  // We will mutate target and through complex reference, we will mutate the orig\n  let orig = target;\n\n  options.safeSet =\n    options.safeSet ||\n    function(obj: any, key: string, value: unknown): any {\n      return (obj[key] = value);\n    };\n  options.safeGet =\n    options.safeGet ||\n    function(obj: any, key: string): any {\n      return obj ? obj[key] : obj;\n    };\n\n  if (keys.length === 1) {\n    options.safeSet(target, path, value);\n    return target;\n  }\n\n  for (let i = 0; i < keys.length; i++) {\n    let prop = keys[i];\n\n    if (Array.isArray(target) && parseInt(prop, 10) < 0) {\n      throw new Error(\n        'Negative indices are not allowed as arrays do not serialize values at negative indices'\n      );\n    }\n\n    const isObj = isObject(options.safeGet(target, prop));\n    const isArray = Array.isArray(options.safeGet(target, prop));\n    const isComplex = isObj || isArray;\n\n    if (!isComplex) {\n      options.safeSet(target, prop, {});\n    } else if (isComplex && isChange(options.safeGet(target, prop))) {\n      let changeValue = getChangeValue(options.safeGet(target, prop));\n\n      if (isObject(changeValue)) {\n        // if an object, we don't want to lose sibling keys\n        const siblings = findSiblings(changeValue, keys);\n\n        const resolvedValue = isChange(value) ? getChangeValue(value) : value;\n\n        const isArrayLike = Array.isArray(target) || isArrayObject(target);\n        const nestedKeys = isArrayLike\n          ? keys.slice(i + 1, keys.length).join('.') // remove first key segment as well as the index\n          : keys.slice(1, keys.length).join('.'); // remove first key segment\n\n        let newValue;\n\n        // if the resolved value was deleted (via setting to null or undefined),\n        // there is no need to setDeep. We can short-circuit that and set\n        // newValue directly because of the shallow value\n        if (isArrayLike && !resolvedValue) {\n          newValue = resolvedValue;\n        } else {\n          newValue = setDeep(siblings, nestedKeys, resolvedValue, options);\n        }\n\n        options.safeSet(target, prop, new Change(newValue));\n\n        // since we are done with the `path`, we can terminate the for loop and return control\n        break;\n      } else {\n        // we don't want to merge new changes with a Change instance higher up in the obj tree\n        // thus we nullify the current Change instance to\n        options.safeSet(target, prop, {});\n      }\n    }\n\n    // last iteration, set and return control\n    if (i === keys.length - 1) {\n      options.safeSet(target, prop, value);\n\n      break;\n    }\n\n    // assign next level of object for next loop\n    target = options.safeGet(target, prop);\n  }\n\n  return orig;\n}\n","import setDeep from './set-deep';\n\nconst { keys } = Object;\n\n/**\n * Given an array of objects, merge their keys into a new object and\n * return the new object.\n *\n * This function merges using `setNestedProperty`.\n */\nexport default function mergeNested<T>(\n  ...objects: Array<{ [key: string]: T }>\n): { [key: string]: T } {\n  let finalObj = {};\n\n  objects.forEach(obj => keys(obj).forEach(key => setDeep(finalObj, key, obj[key])));\n\n  return finalObj;\n}\n","export function buildOldValues(\n  content: any,\n  changes: Record<string, any>[],\n  getDeep: Function\n): object {\n  const obj = Object.create(null);\n\n  for (let change of changes) {\n    obj[change.key] = getDeep(content, change.key);\n  }\n\n  return obj;\n}\n","import { getChangeValue, isChange } from '../-private/change';\nimport normalizeObject from './normalize-object';\nimport { isArrayObject, objectToArray, arrayToObject } from './array-object';\n\ninterface Options {\n  safeGet: any;\n  safeSet: any;\n  propertyIsUnsafe?: any;\n  getKeys?: (record: Record<string, unknown>) => string[];\n}\n\nfunction isNonNullObject(value: any): boolean {\n  return !!value && typeof value === 'object';\n}\n\nfunction isSpecial(value: any): boolean {\n  let stringValue = Object.prototype.toString.call(value);\n\n  return stringValue === '[object RegExp]' || stringValue === '[object Date]';\n}\n\nfunction isMergeableObject(value: any): boolean {\n  return isNonNullObject(value) && !isSpecial(value);\n}\n\nfunction getEnumerableOwnPropertySymbols(target: any): any {\n  return Object.getOwnPropertySymbols\n    ? Object.getOwnPropertySymbols(target).filter(symbol => {\n        return target.propertyIsEnumerable(symbol);\n      })\n    : [];\n}\n\nfunction getKeys(target: any) {\n  return Object.keys(target).concat(getEnumerableOwnPropertySymbols(target));\n}\n\nfunction propertyIsOnObject(object: any, property: any) {\n  try {\n    return property in object;\n  } catch (_) {\n    return false;\n  }\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nexport function propertyIsUnsafe(target: any, key: string): boolean {\n  return (\n    propertyIsOnObject(target, key) && // Properties are safe to merge if they don't exist in the target yet,\n    // unsafe if they exist up the prototype chain and also unsafe if they're nonenumerable.\n    !(Object.hasOwnProperty.call(target, key) && Object.propertyIsEnumerable.call(target, key))\n  );\n}\n\n/**\n * DFS - traverse depth first until find object with `value`.  Then go back up tree and try on next key\n * Need to exhaust all possible avenues.\n *\n * @method buildPathToValue\n */\nfunction buildPathToValue(\n  source: any,\n  options: Options,\n  kv: Record<string, any>,\n  possibleKeys: string[]\n): Record<string, any> {\n  Object.keys(source).forEach((key: string): void => {\n    let possible = source[key];\n    if (possible && isChange(possible)) {\n      kv[[...possibleKeys, key].join('.')] = getChangeValue(possible);\n      return;\n    }\n\n    if (possible && typeof possible === 'object') {\n      buildPathToValue(possible, options, kv, [...possibleKeys, key]);\n    }\n  });\n\n  return kv;\n}\n\n/**\n * `source` will always have a leaf key `value` with the property we want to set\n *\n * @method mergeTargetAndSource\n */\nfunction mergeTargetAndSource(target: any, source: any, options: Required<Options>): any {\n  options.getKeys(source).forEach(key => {\n    // proto poisoning.  So can set by nested key path 'person.name'\n    if (options.propertyIsUnsafe(target, key)) {\n      // if safeSet, we will find keys leading up to value and set\n      if (options.safeSet) {\n        const kv: Record<string, any> = buildPathToValue(source, options, {}, []);\n        // each key will be a path nested to the value `person.name.other`\n        if (Object.keys(kv).length > 0) {\n          // we found some keys!\n          for (key in kv) {\n            const val = kv[key];\n            options.safeSet(target, key, val);\n          }\n        }\n      }\n\n      return;\n    }\n\n    // else safe key on object\n    if (\n      propertyIsOnObject(target, key) &&\n      isMergeableObject(source[key]) &&\n      !isChange(source[key])\n    ) {\n      options.safeSet(\n        target,\n        key,\n        mergeDeep(options.safeGet(target, key), options.safeGet(source, key), options)\n      );\n    } else {\n      let next = source[key];\n      if (next && isChange(next)) {\n        return options.safeSet(target, key, getChangeValue(next));\n      }\n\n      return options.safeSet(target, key, normalizeObject(next));\n    }\n  });\n\n  return target;\n}\n\n/**\n * goal is to mutate target with source's properties, ensuring we dont encounter\n * pitfalls of { ..., ... } spread syntax overwriting keys on objects that we merged\n *\n * This is also adjusted for Ember peculiarities.  Specifically `options.setPath` will allows us\n * to handle properties on Proxy objects (that aren't the target's own property)\n *\n * @method mergeDeep\n */\nexport default function mergeDeep(\n  target: any,\n  source: any,\n  options: Options = {\n    safeGet: undefined,\n    safeSet: undefined,\n    propertyIsUnsafe: undefined,\n    getKeys: undefined\n  }\n): object | [any] {\n  options.getKeys = options.getKeys || getKeys;\n  options.propertyIsUnsafe = options.propertyIsUnsafe || propertyIsUnsafe;\n\n  options.safeGet =\n    options.safeGet ||\n    function(obj: Record<string, any>, key: string): Record<string, any> {\n      return obj[key];\n    };\n  options.safeSet =\n    options.safeSet ||\n    function(obj: any, key: string, value: unknown): any {\n      return (obj[key] = value);\n    };\n  let sourceIsArray = Array.isArray(source);\n  let targetIsArray = Array.isArray(target);\n  let sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n  if (!sourceAndTargetTypesMatch) {\n    let sourceIsArrayLike = isArrayObject(source);\n\n    if (targetIsArray && sourceIsArrayLike) {\n      return objectToArray(\n        mergeTargetAndSource(arrayToObject(target), source, options as Required<Options>)\n      );\n    }\n\n    return source;\n  } else if (sourceIsArray) {\n    return source;\n  } else if (target === null || target === undefined) {\n    /**\n     * If the target was set to null or undefined, we always want to return the source.\n     * There is nothing to merge.\n     *\n     * Without this explicit check, typeof null === typeof {any object-like thing}\n     * which means that mergeTargetAndSource will be called, and you can't merge with null\n     */\n    return source;\n  } else {\n    return mergeTargetAndSource(target, source, options as Required<Options>);\n  }\n}\n","import { ProxyHandler, Content } from '../types';\nimport isObject from './is-object';\nimport setDeep from './set-deep';\nimport Change, { getChangeValue, isChange } from '../-private/change';\nimport normalizeObject from './normalize-object';\nimport { objectToArray, arrayToObject } from './array-object';\nimport mergeDeep from './merge-deep';\n\nconst objectProxyHandler = {\n  /**\n   * Priority of access - changes, content, then check node\n   * @property get\n   */\n  get(node: ProxyHandler, key: string): any {\n    if (typeof key === 'symbol') {\n      return;\n    }\n\n    let childValue;\n\n    if (node.changes.hasOwnProperty && node.changes.hasOwnProperty(key)) {\n      childValue = node.safeGet(node.changes, key);\n\n      if (typeof childValue === 'undefined') {\n        return;\n      }\n    }\n\n    if (isChange(childValue)) {\n      return getChangeValue(childValue);\n    }\n\n    if (isObject(childValue)) {\n      let childNode: ProxyHandler | undefined = node.children[key];\n\n      if (childNode === undefined && node.content) {\n        let childContent = node.safeGet(node.content, key);\n        // cache it\n        childNode = node.children[key] = new ObjectTreeNode(childValue, childContent, node.safeGet);\n      }\n\n      // return proxy if object so we can trap further access to changes or content\n      if (childNode) {\n        return childNode.proxy;\n      }\n    }\n\n    if (typeof childValue !== 'undefined') {\n      // primitive\n      return childValue;\n    } else if (node.content) {\n      const nodeContent = node.content;\n      if (node.safeGet(nodeContent, key)) {\n        return node.safeGet(nodeContent, key);\n      }\n    }\n\n    if (typeof node[key] === 'function' || node.hasOwnProperty(key)) {\n      return node[key];\n    }\n  },\n\n  ownKeys(node: ProxyHandler): any {\n    return Reflect.ownKeys(node.changes);\n  },\n\n  getOwnPropertyDescriptor(node: ProxyHandler, prop: string): any {\n    return Reflect.getOwnPropertyDescriptor(node.changes, prop);\n  },\n\n  has(node: ProxyHandler, prop: string): any {\n    return Reflect.has(node.changes, prop);\n  },\n\n  set(node: ProxyHandler, key: string, value: unknown): any {\n    // dont want to set private properties on changes (usually found on outside actors)\n    if (key.startsWith('_')) {\n      return Reflect.set(node, key, value);\n    }\n    return Reflect.set(node.changes, key, new Change(value));\n  }\n};\n\nfunction defaultSafeGet(obj: Record<string, any>, key: string) {\n  return obj[key];\n}\n\nclass ObjectTreeNode implements ProxyHandler {\n  changes: Record<string, any>;\n  content: Content;\n  proxy: any;\n  children: Record<string, any>;\n\n  constructor(\n    changes: Record<string, any> = {},\n    content: Content = {},\n    public safeGet: Function = defaultSafeGet,\n    public isObject: Function = isObject\n  ) {\n    this.changes = changes;\n    this.content = content;\n    this.proxy = new Proxy(this, objectProxyHandler);\n    this.children = Object.create(null);\n  }\n\n  get(key: string) {\n    return this.safeGet(this.changes, key);\n  }\n\n  set(key: string, value: unknown) {\n    return setDeep(this.changes, key, value);\n  }\n\n  unwrap(): Record<string, any> {\n    let changes = this.changes;\n\n    if (isObject(changes)) {\n      changes = normalizeObject(changes, this.isObject);\n\n      const content = this.content;\n      if (isObject(content)) {\n        changes = normalizeObject(changes, this.isObject);\n        return { ...content, ...changes };\n      } else if (Array.isArray(content)) {\n        changes = normalizeObject(changes, this.isObject);\n\n        return objectToArray(mergeDeep(arrayToObject(content), changes));\n      }\n    }\n\n    return changes;\n  }\n}\n\nexport { ObjectTreeNode };\n","/**\n * Merges all sources together, excluding keys in excludedKeys.\n *\n * @param  {string[]} excludedKeys\n * @param  {...object} sources\n * @return {object}\n */\nexport default function objectWithout(excludedKeys: string[], ...sources: any[]): any {\n  return sources.reduce((acc: Record<string, any>, source: any): object => {\n    Object.keys(source)\n      .filter(key => excludedKeys.indexOf(key) === -1 || !source.hasOwnProperty(key))\n      .forEach(key => (acc[key] = source[key]));\n    return acc;\n  }, {});\n}\n","export default function take(\n  originalObj: { [key: string]: any } = {},\n  keysToTake: string[] = []\n): { [key: string]: any } {\n  let newObj: { [key: string]: any } = {};\n\n  for (let key in originalObj) {\n    if (keysToTake.indexOf(key) !== -1) {\n      newObj[key] = originalObj[key];\n    }\n  }\n\n  return newObj;\n}\n","import Change, { getChangeValue, isChange } from './-private/change';\nimport { getKeyValues, getKeyErrorValues } from './utils/get-key-values';\nimport lookupValidator from './utils/validator-lookup';\nimport { notifierForEvent } from './-private/evented';\nimport Err from './-private/err';\nimport { hasKey, pathInChanges } from './utils/has-key';\nimport normalizeObject from './utils/normalize-object';\nimport { hasChanges } from './utils/has-changes';\nimport pureAssign from './utils/assign';\nimport { flattenValidations } from './utils/flatten-validations';\nimport isChangeset, { CHANGESET } from './utils/is-changeset';\nimport isObject from './utils/is-object';\nimport isPromise from './utils/is-promise';\nimport keyInObject from './utils/key-in-object';\nimport mergeNested from './utils/merge-nested';\nimport { buildOldValues } from './utils/build-old-values';\nimport { ObjectTreeNode } from './utils/object-tree-node';\nimport objectWithout from './utils/object-without';\nimport take from './utils/take';\nimport mergeDeep, { propertyIsUnsafe } from './utils/merge-deep';\nimport setDeep from './utils/set-deep';\nimport getDeep, { getSubObject } from './utils/get-deep';\nimport { objectToArray, arrayToObject } from './utils/array-object';\n\nimport {\n  Changes,\n  Config,\n  Content,\n  Errors,\n  IErr,\n  IChangeset,\n  INotifier,\n  InternalMap,\n  NewProperty,\n  PrepareChangesFn,\n  RunningValidations,\n  Snapshot,\n  ValidationErr,\n  ValidationResult,\n  ValidatorAction,\n  ValidatorMap\n} from './types';\n\nexport {\n  CHANGESET,\n  Change,\n  Err,\n  buildOldValues,\n  isChangeset,\n  isObject,\n  isChange,\n  getChangeValue,\n  isPromise,\n  getKeyValues,\n  keyInObject,\n  lookupValidator,\n  mergeNested,\n  normalizeObject,\n  objectWithout,\n  pureAssign,\n  take,\n  mergeDeep,\n  setDeep,\n  getDeep,\n  propertyIsUnsafe\n};\n\nconst { keys } = Object;\nconst CONTENT = '_content';\nconst PREVIOUS_CONTENT = '_previousContent';\nconst CHANGES = '_changes';\nconst ERRORS = '_errors';\nconst VALIDATOR = '_validator';\nconst OPTIONS = '_options';\nconst RUNNING_VALIDATIONS = '_runningValidations';\nconst BEFORE_VALIDATION_EVENT = 'beforeValidation';\nconst AFTER_VALIDATION_EVENT = 'afterValidation';\nconst AFTER_ROLLBACK_EVENT = 'afterRollback';\nconst defaultValidatorFn = () => true;\nconst defaultOptions = { skipValidate: false };\n\nconst DEBUG = process.env.NODE_ENV !== 'production';\n\nfunction assert(msg: string, property: unknown): void {\n  if (DEBUG) {\n    if (!property) {\n      throw new Error(msg);\n    }\n  }\n}\n\nfunction maybeUnwrapProxy(content: Content): any {\n  return content;\n}\n\nexport class BufferedChangeset implements IChangeset {\n  constructor(\n    obj: object,\n    public validateFn: ValidatorAction = defaultValidatorFn,\n    public validationMap: ValidatorMap = {},\n    options: Config = {}\n  ) {\n    this[CONTENT] = obj;\n    this[PREVIOUS_CONTENT] = undefined;\n    this[CHANGES] = {};\n    this[ERRORS] = {};\n    this[VALIDATOR] = validateFn;\n    this[OPTIONS] = pureAssign(defaultOptions, options);\n    this[RUNNING_VALIDATIONS] = {};\n  }\n\n  /**\n   * Any property that is not one of the getter/setter/methods on the\n   * BufferedProxy instance. The value type is `unknown` in order to avoid\n   * having to predefine key/value pairs of the correct types in the target\n   * object. Setting the index signature to `[key: string]: T[K]` would allow us\n   * to typecheck the value that is set on the proxy. However, no\n   * getters/setters/methods can be added to the class. This is the tradeoff\n   * we make for this particular design pattern (class based BufferedProxy).\n   */\n  [key: string]: unknown;\n  [CONTENT]: object;\n  [PREVIOUS_CONTENT]: object | undefined;\n  [CHANGES]: Changes;\n  [ERRORS]: Errors<any>;\n  [VALIDATOR]: ValidatorAction;\n  [OPTIONS]: Config;\n  [RUNNING_VALIDATIONS]: {};\n\n  __changeset__ = CHANGESET;\n\n  _eventedNotifiers = {};\n\n  on(eventName: string, callback: Function): INotifier {\n    const notifier = notifierForEvent(this, eventName);\n    return notifier.addListener(callback);\n  }\n\n  off(eventName: string, callback: Function): INotifier {\n    const notifier = notifierForEvent(this, eventName);\n    return notifier.removeListener(callback);\n  }\n\n  trigger(eventName: string, ...args: any[]): void {\n    const notifier = notifierForEvent(this, eventName);\n    if (notifier) {\n      notifier.trigger(...args);\n    }\n  }\n\n  /**\n   * @property isObject\n   * @override\n   */\n  isObject = isObject;\n\n  /**\n   * @property maybeUnwrapProxy\n   * @override\n   */\n  maybeUnwrapProxy = maybeUnwrapProxy;\n\n  /**\n   * @property setDeep\n   * @override\n   */\n  setDeep = setDeep;\n\n  /**\n   * @property getDeep\n   * @override\n   */\n  getDeep = getDeep;\n\n  /**\n   * @property mergeDeep\n   * @override\n   */\n  mergeDeep = mergeDeep;\n\n  /**\n   * @property safeGet\n   * @override\n   */\n  safeGet(obj: any, key: string) {\n    return obj[key];\n  }\n\n  /**\n   * @property safeSet\n   * @override\n   */\n  safeSet(obj: any, key: string, value: unknown) {\n    return (obj[key] = value);\n  }\n\n  get _bareChanges() {\n    let obj = this[CHANGES];\n\n    return getKeyValues(obj).reduce((newObj: { [key: string]: any }, { key, value }) => {\n      newObj[key] = value;\n      return newObj;\n    }, Object.create(null));\n  }\n\n  /**\n   * @property changes\n   * @type {Array}\n   */\n  get changes() {\n    let obj = this[CHANGES];\n\n    // [{ key, value }, ...]\n    return getKeyValues(obj);\n  }\n\n  /**\n   * @property errors\n   * @type {Array}\n   */\n  get errors() {\n    let obj = this[ERRORS];\n\n    // [{ key, validation, value }, ...]\n    return getKeyErrorValues(obj);\n  }\n\n  get change() {\n    let obj: Changes = this[CHANGES];\n    if (hasChanges(this[CHANGES])) {\n      return normalizeObject(obj);\n    }\n\n    return {};\n  }\n\n  get error() {\n    return this[ERRORS];\n  }\n\n  get data() {\n    return this[CONTENT];\n  }\n\n  /**\n   * @property isValid\n   * @type {Array}\n   */\n  get isValid() {\n    return getKeyErrorValues(this[ERRORS]).length === 0;\n  }\n  /**\n   * @property isPristine\n   * @type {Boolean}\n   */\n  get isPristine() {\n    let validationKeys = Object.keys(this[CHANGES]);\n    const userChangesetKeys: string[] | undefined = this[OPTIONS].changesetKeys;\n    if (Array.isArray(userChangesetKeys) && userChangesetKeys.length) {\n      validationKeys = validationKeys.filter(k => userChangesetKeys.includes(k));\n    }\n\n    if (validationKeys.length === 0) {\n      return true;\n    }\n\n    return !hasChanges(this[CHANGES]);\n  }\n  /**\n   * @property isInvalid\n   * @type {Boolean}\n   */\n  get isInvalid() {\n    return !this.isValid;\n  }\n  /**\n   * @property isDirty\n   * @type {Boolean}\n   */\n  get isDirty() {\n    return !this.isPristine;\n  }\n\n  /**\n   * Stores change on the changeset.\n   * This approximately works just like the Ember API\n   *\n   * @method setUnknownProperty\n   */\n  setUnknownProperty<T>(key: string, value: T): void {\n    let config: Config = this[OPTIONS];\n    let changesetKeys = config.changesetKeys;\n    if (Array.isArray(changesetKeys) && changesetKeys.length > 0) {\n      const hasKey = changesetKeys.find(chKey => key.match(chKey));\n      if (!hasKey) {\n        return;\n      }\n    }\n\n    let content: Content = this[CONTENT];\n    let oldValue = this.safeGet(content, key);\n\n    let skipValidate: boolean | undefined = config.skipValidate;\n    if (skipValidate) {\n      this._setProperty({ key, value, oldValue });\n      this._handleValidation(true, { key, value });\n      return;\n    }\n\n    this._setProperty({ key, value, oldValue });\n    this._validateKey(key, value);\n  }\n\n  /**\n   * String representation for the changeset.\n   */\n  toString(): string {\n    let normalisedContent: object = pureAssign(this[CONTENT], {});\n    return `changeset:${normalisedContent.toString()}`;\n  }\n\n  /**\n   * Provides a function to run before emitting changes to the model. The\n   * callback function must return a hash in the same shape:\n   *\n   * ```\n   * changeset\n   *   .prepare((changes) => {\n   *     let modified = {};\n   *\n   *     for (let key in changes) {\n   *       modified[underscore(key)] = changes[key];\n   *     }\n   *\n   *    return modified; // { first_name: \"Jim\", last_name: \"Bob\" }\n   *  })\n   *  .execute(); // execute the changes\n   * ```\n   *\n   * @method prepare\n   */\n  prepare(prepareChangesFn: PrepareChangesFn): this {\n    let changes: { [s: string]: any } = this._bareChanges;\n    let preparedChanges = prepareChangesFn(changes);\n\n    assert('Callback to `changeset.prepare` must return an object', this.isObject(preparedChanges));\n\n    let newObj: Changes = {};\n    if (this.isObject(preparedChanges)) {\n      let newChanges: Changes = keys(preparedChanges as Record<string, any>).reduce(\n        (newObj: Changes, key: keyof Changes) => {\n          newObj[key] = new Change((preparedChanges as Record<string, any>)[key]);\n          return newObj;\n        },\n        newObj\n      );\n\n      // @tracked\n      this[CHANGES] = newChanges;\n    }\n\n    return this;\n  }\n\n  /**\n   * Executes the changeset if in a valid state.\n   *\n   * @method execute\n   */\n  execute(): this {\n    let oldContent;\n    if (this.isValid && this.isDirty) {\n      let content: Content = this[CONTENT];\n      let changes: Changes = this[CHANGES];\n\n      // keep old values in case of error and we want to rollback\n      oldContent = buildOldValues(content, this.changes, this.getDeep);\n\n      // we want mutation on original object\n      // @tracked\n      this[CONTENT] = this.mergeDeep(content, changes);\n    }\n\n    // trigger any registered callbacks by same keyword as method name\n    this.trigger('execute');\n\n    this[CHANGES] = {};\n    this[PREVIOUS_CONTENT] = oldContent;\n\n    return this;\n  }\n\n  unexecute(): this {\n    if (this[PREVIOUS_CONTENT]) {\n      this[CONTENT] = this.mergeDeep(this[CONTENT], this[PREVIOUS_CONTENT], {\n        safeGet: this.safeGet,\n        safeSet: this.safeSet\n      });\n    }\n\n    return this;\n  }\n\n  /**\n   * Executes the changeset and saves the underlying content.\n   *\n   * @method save\n   * @param {Object} options optional object to pass to content save method\n   */\n  async save(options?: object): Promise<IChangeset | any> {\n    let content: Content = this[CONTENT];\n    let savePromise: any | Promise<BufferedChangeset | any> = Promise.resolve(this);\n    this.execute();\n\n    if (typeof content.save === 'function') {\n      savePromise = content.save(options);\n    } else if (typeof this.safeGet(content, 'save') === 'function') {\n      // we might be getting this off a proxy object.  For example, when a\n      // belongsTo relationship (a proxy on the parent model)\n      // another way would be content(belongsTo).content.save\n      let maybePromise = this.maybeUnwrapProxy(content).save();\n      if (maybePromise) {\n        savePromise = maybePromise;\n      }\n    }\n\n    try {\n      const result = await savePromise;\n\n      // cleanup changeset\n      this.rollback();\n\n      return result;\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  /**\n   * Merges 2 valid changesets and returns a new changeset. Both changesets\n   * must point to the same underlying object. The changeset target is the\n   * origin. For example:\n   *\n   * ```\n   * let changesetA = new Changeset(user, validatorFn);\n   * let changesetB = new Changeset(user, validatorFn);\n   * changesetA.set('firstName', 'Jim');\n   * changesetB.set('firstName', 'Jimmy');\n   * changesetB.set('lastName', 'Fallon');\n   * let changesetC = changesetA.merge(changesetB);\n   * changesetC.execute();\n   * user.get('firstName'); // \"Jimmy\"\n   * user.get('lastName'); // \"Fallon\"\n   * ```\n   *\n   * @method merge\n   */\n  merge(changeset: this): this {\n    let content: Content = this[CONTENT];\n    assert('Cannot merge with a non-changeset', isChangeset(changeset));\n    assert('Cannot merge with a changeset of different content', changeset[CONTENT] === content);\n\n    if (this.isPristine && changeset.isPristine) {\n      return this;\n    }\n\n    let c1: Changes = this[CHANGES];\n    let c2: Changes = changeset[CHANGES];\n    let e1: Errors<any> = this[ERRORS];\n    let e2: Errors<any> = changeset[ERRORS];\n\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    let newChangeset: any = new ValidatedChangeset(content, this[VALIDATOR]); // ChangesetDef\n    let newErrors: Errors<any> = objectWithout(keys(c2), e1);\n    let newChanges: Changes = objectWithout(keys(e2), c1);\n    let mergedErrors: Errors<any> = mergeNested(newErrors, e2);\n    let mergedChanges: Changes = mergeNested(newChanges, c2);\n\n    newChangeset[ERRORS] = mergedErrors;\n    newChangeset[CHANGES] = mergedChanges;\n    newChangeset._notifyVirtualProperties();\n    return newChangeset;\n  }\n\n  /**\n   * Returns the changeset to its pristine state, and discards changes and\n   * errors.\n   *\n   * @method rollback\n   */\n  rollback(): this {\n    // Get keys before reset.\n    let keys = this._rollbackKeys();\n\n    // Reset.\n    this[CHANGES] = {};\n    this[ERRORS] = {};\n    this._notifyVirtualProperties(keys);\n\n    this.trigger(AFTER_ROLLBACK_EVENT);\n    return this;\n  }\n\n  /**\n   * Discards any errors, keeping only valid changes.\n   *\n   * @public\n   * @chainable\n   * @method rollbackInvalid\n   * @param {String} key optional key to rollback invalid values\n   * @return {Changeset}\n   */\n  rollbackInvalid(key: string | void): this {\n    let errorKeys = keys(this[ERRORS]);\n\n    if (key) {\n      this._notifyVirtualProperties([key]);\n      // @tracked\n      this[ERRORS] = this._deleteKey(ERRORS, key) as Errors<any>;\n      if (errorKeys.indexOf(key) > -1) {\n        this[CHANGES] = this._deleteKey(CHANGES, key) as Changes;\n      }\n    } else {\n      this._notifyVirtualProperties();\n      this[ERRORS] = {};\n\n      // if on CHANGES hash, rollback those as well\n      errorKeys.forEach(errKey => {\n        this[CHANGES] = this._deleteKey(CHANGES, errKey) as Changes;\n      });\n    }\n\n    return this;\n  }\n\n  /**\n   * Discards changes/errors for the specified properly only.\n   *\n   * @public\n   * @chainable\n   * @method rollbackProperty\n   * @param {String} key key to delete off of changes and errors\n   * @return {Changeset}\n   */\n  rollbackProperty(key: string): this {\n    // @tracked\n    this[CHANGES] = this._deleteKey(CHANGES, key) as Changes;\n    // @tracked\n    this[ERRORS] = this._deleteKey(ERRORS, key) as Errors<any>;\n\n    return this;\n  }\n\n  /**\n   * Validates the changeset immediately against the validationMap passed in.\n   * If no key is passed into this method, it will validate all fields on the\n   * validationMap and set errors accordingly. Will throw an error if no\n   * validationMap is present.\n   *\n   * @method validate\n   */\n  async validate(...validationKeys: string[]): Promise<any> {\n    if (keys(this.validationMap as object).length === 0 && !validationKeys.length) {\n      return Promise.resolve(null);\n    }\n\n    validationKeys =\n      validationKeys.length > 0\n        ? validationKeys\n        : keys(flattenValidations(this.validationMap as object));\n\n    let maybePromise = validationKeys.map(key => {\n      const value: any = this[key];\n      const resolvedValue = value instanceof ObjectTreeNode ? value.unwrap() : value;\n      return this._validateKey(key, resolvedValue);\n    });\n\n    return Promise.all(maybePromise);\n  }\n\n  /**\n   * Manually add an error to the changeset. If there is an existing\n   * error or change for `key`, it will be overwritten.\n   *\n   * @method addError\n   */\n  addError<T>(key: string, error: IErr<T> | ValidationErr) {\n    // Construct new `Err` instance.\n    let newError;\n\n    const isIErr = <T>(error: unknown): error is IErr<T> =>\n      this.isObject(error) && !Array.isArray(error);\n    if (isIErr(error)) {\n      assert('Error must have value.', error.hasOwnProperty('value') || error.value !== undefined);\n      assert('Error must have validation.', error.hasOwnProperty('validation'));\n      newError = new Err(error.value, error.validation);\n    } else {\n      let value = this[key];\n      newError = new Err(value, error as ValidationErr);\n    }\n\n    // Add `key` to errors map.\n    let errors: Errors<any> = this[ERRORS];\n    // @tracked\n    this[ERRORS] = this.setDeep(errors, key, newError, { safeSet: this.safeSet });\n\n    // Return passed-in `error`.\n    return error;\n  }\n\n  /**\n   * Manually push multiple errors to the changeset as an array.\n   * key maybe in form 'name.short' so need to go deep\n   *\n   * @method pushErrors\n   */\n  pushErrors(key: string, ...newErrors: string[] | ValidationErr[]): IErr<any> {\n    let errors: Errors<any> = this[ERRORS];\n    let existingError: IErr<any> | Err = this.getDeep(errors, key) || new Err(null, []);\n    let validation: ValidationErr | ValidationErr[] = existingError.validation;\n    let value: any = this[key];\n\n    if (!Array.isArray(validation) && Boolean(validation)) {\n      existingError.validation = [validation];\n    }\n\n    let v = existingError.validation;\n    validation = [...v, ...newErrors];\n    let newError = new Err(value, validation);\n    // @tracked\n    this[ERRORS] = this.setDeep(errors, key as string, newError, { safeSet: this.safeSet });\n\n    return { value, validation };\n  }\n\n  /**\n   * Creates a snapshot of the changeset's errors and changes.\n   *\n   * @method snapshot\n   */\n  snapshot(): Snapshot {\n    let changes: Changes = this[CHANGES];\n    let errors: Errors<any> = this[ERRORS];\n\n    return {\n      changes: keys(changes).reduce((newObj: Changes, key: keyof Changes) => {\n        newObj[key] = getChangeValue(changes[key]);\n        return newObj;\n      }, {}),\n\n      errors: keys(errors).reduce((newObj: Errors<any>, key: keyof Errors<any>) => {\n        let e = errors[key];\n        newObj[key] = { value: e.value, validation: e.validation };\n        return newObj;\n      }, {})\n    };\n  }\n\n  /**\n   * Restores a snapshot of changes and errors. This overrides existing\n   * changes and errors.\n   *\n   * @method restore\n   */\n  restore({ changes, errors }: Snapshot): this {\n    let newChanges: Changes = keys(changes).reduce((newObj: Changes, key: keyof Changes) => {\n      newObj[key] = new Change(changes[key]);\n      return newObj;\n    }, {});\n\n    let newErrors: Errors<any> = keys(errors).reduce((newObj: Errors<any>, key: keyof Changes) => {\n      let e: IErr<any> = errors[key];\n      newObj[key] = new Err(e.value, e.validation);\n      return newObj;\n    }, {});\n\n    // @tracked\n    this[CHANGES] = newChanges;\n    // @tracked\n    this[ERRORS] = newErrors;\n\n    this._notifyVirtualProperties();\n    return this;\n  }\n\n  /**\n   * Unlike `Ecto.Changeset.cast`, `cast` will take allowed keys and\n   * remove unwanted keys off of the changeset. For example, this method\n   * can be used to only allow specified changes through prior to saving.\n   *\n   * @method cast\n   */\n  cast(allowed: string[] = []): this {\n    let changes: Changes = this[CHANGES];\n\n    if (Array.isArray(allowed) && allowed.length === 0) {\n      return this;\n    }\n\n    let changeKeys: string[] = keys(changes);\n    let validKeys = changeKeys.filter((key: string) => allowed.includes(key));\n    let casted = take(changes, validKeys);\n    // @tracked\n    this[CHANGES] = casted;\n    return this;\n  }\n\n  /**\n   * Checks to see if async validator for a given key has not resolved.\n   * If no key is provided it will check to see if any async validator is running.\n   *\n   * @method isValidating\n   */\n  isValidating(key?: string | void): boolean {\n    let runningValidations: RunningValidations = this[RUNNING_VALIDATIONS];\n    let ks: string[] = keys(runningValidations);\n    if (key) {\n      return ks.includes(key);\n    }\n    return ks.length > 0;\n  }\n\n  /**\n   * Validates a specific key\n   *\n   * @method _validateKey\n   * @private\n   */\n  _validateKey<T>(\n    key: string,\n    value: T\n  ): Promise<ValidationResult | T | IErr<T>> | T | IErr<T> | ValidationResult {\n    let content: Content = this[CONTENT];\n    let oldValue: any = this.getDeep(content, key);\n    let validation: ValidationResult | Promise<ValidationResult> = this._validate(\n      key,\n      value,\n      oldValue\n    );\n\n    this.trigger(BEFORE_VALIDATION_EVENT, key);\n\n    // TODO: Address case when Promise is rejected.\n    if (isPromise(validation)) {\n      this._setIsValidating(key, validation as Promise<ValidationResult>);\n\n      let running: RunningValidations = this[RUNNING_VALIDATIONS];\n      let promises = Object.entries(running);\n\n      return Promise.all(promises).then(() => {\n        return (validation as Promise<ValidationResult>)\n          .then((resolvedValidation: ValidationResult) => {\n            delete running[key];\n\n            return this._handleValidation(resolvedValidation, { key, value });\n          })\n          .then(result => {\n            this.trigger(AFTER_VALIDATION_EVENT, key);\n            return result;\n          });\n      });\n    }\n\n    let result = this._handleValidation(validation as ValidationResult, { key, value });\n\n    this.trigger(AFTER_VALIDATION_EVENT, key);\n\n    return result;\n  }\n\n  /**\n   * Takes resolved validation and adds an error or simply returns the value\n   *\n   * @method _handleValidation\n   * @private\n   */\n  _handleValidation<T>(\n    validation: ValidationResult,\n    { key, value }: NewProperty<T>\n  ): T | IErr<T> | ValidationErr {\n    const isValid: boolean =\n      validation === true ||\n      (Array.isArray(validation) && validation.length === 1 && validation[0] === true);\n\n    // Happy path: remove `key` from error map.\n    // @tracked\n    this[ERRORS] = this._deleteKey(ERRORS, key) as Errors<any>;\n\n    // Error case.\n    if (!isValid) {\n      return this.addError(key, { value, validation } as IErr<T>);\n    }\n\n    return value;\n  }\n\n  /**\n   * runs the validator with the key and value\n   *\n   * @method _validate\n   * @private\n   */\n  _validate(\n    key: string,\n    newValue: unknown,\n    oldValue: unknown\n  ): ValidationResult | Promise<ValidationResult> {\n    let validator: ValidatorAction = this[VALIDATOR];\n    let content: Content = this[CONTENT];\n\n    if (typeof validator === 'function') {\n      let validationResult = validator({\n        key,\n        newValue,\n        oldValue,\n        changes: this.change,\n        content\n      });\n\n      if (validationResult === undefined) {\n        // no validator function found for key\n        return true;\n      }\n\n      return validationResult;\n    }\n\n    return true;\n  }\n\n  /**\n   * Sets property on the changeset.\n   */\n  _setProperty<T>({ key, value, oldValue }: NewProperty<T>): void {\n    let changes: Changes = this[CHANGES];\n\n    // Happy path: update change map.\n    if (oldValue !== value) {\n      // @tracked\n      let result: Changes = this.setDeep(changes, key, new Change(value), {\n        safeSet: this.safeSet\n      });\n\n      this[CHANGES] = result;\n    } else if (keyInObject(changes, key)) {\n      // @tracked\n      // remove key if setting back to original\n      this[CHANGES] = this._deleteKey(CHANGES, key) as Changes;\n    }\n  }\n\n  /**\n   * Increment or decrement the number of running validations for a\n   * given key.\n   */\n  _setIsValidating(key: string, promise: Promise<ValidationResult>): void {\n    let running: RunningValidations = this[RUNNING_VALIDATIONS];\n    this.setDeep(running, key, promise);\n  }\n\n  /**\n   * Notifies virtual properties set on the changeset of a change.\n   * You can specify which keys are notified by passing in an array.\n   *\n   * @private\n   * @param {Array} keys\n   * @return {Void}\n   */\n  _notifyVirtualProperties(keys?: string[]): string[] | undefined {\n    if (!keys) {\n      keys = this._rollbackKeys();\n    }\n\n    return keys;\n  }\n\n  /**\n   * Gets the changes and error keys.\n   */\n  _rollbackKeys(): string[] {\n    let changes: Changes = this[CHANGES];\n    let errors: Errors<any> = this[ERRORS];\n    return [...new Set([...keys(changes), ...keys(errors)])];\n  }\n\n  /**\n   * Deletes a key off an object and notifies observers.\n   */\n  _deleteKey(objName: string, key = ''): InternalMap {\n    let obj = this[objName] as InternalMap;\n    let keys = key.split('.');\n\n    if (keys.length === 1 && obj.hasOwnProperty(key)) {\n      delete obj[key];\n    } else if (obj[keys[0]]) {\n      let [base, ...remaining] = keys;\n      let previousNode: { [key: string]: any } = obj;\n      let currentNode: any = obj[base];\n      let currentKey: string | undefined = base;\n\n      // find leaf and delete from map\n      while (this.isObject(currentNode) && currentKey) {\n        let curr: { [key: string]: unknown } = currentNode;\n        if (isChange(curr) || typeof curr.value !== 'undefined' || curr.validation) {\n          delete previousNode[currentKey];\n        }\n\n        currentKey = remaining.shift();\n        previousNode = currentNode;\n        if (currentKey) {\n          currentNode = currentNode[currentKey];\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  get(key: string): any {\n    // 'person'\n    // 'person.username'\n    let [baseKey, ...remaining] = key.split('.');\n    let changes: Changes = this[CHANGES];\n    let content: Content = this[CONTENT];\n    if (Object.prototype.hasOwnProperty.call(changes, baseKey)) {\n      const changesValue = this.getDeep(changes, key);\n      const isObject = this.isObject(changesValue);\n\n      if (!isObject && changesValue !== undefined) {\n        // if safeGet returns a primitive, then go ahead return\n        return changesValue;\n      }\n    }\n    // At this point, we may have a changes object, a dot separated key, or a need to access the `key`\n    // on `this` or `content`\n    if (Object.prototype.hasOwnProperty.call(changes, baseKey) && hasChanges(changes)) {\n      let baseChanges = changes[baseKey];\n\n      // 'user.name'\n      const normalizedBaseChanges = normalizeObject(baseChanges);\n      if (this.isObject(normalizedBaseChanges)) {\n        const result = this.maybeUnwrapProxy(\n          this.getDeep(normalizedBaseChanges, remaining.join('.'))\n        );\n\n        // need to do this inside of Change object\n        // basically anything inside of a Change object that is undefined means it was removed\n        if (\n          typeof result === 'undefined' &&\n          pathInChanges(changes, key, this.safeGet) &&\n          !hasKey(changes, key, this.safeGet) &&\n          this.getDeep(content, key)\n        ) {\n          return;\n        }\n\n        if (this.isObject(result)) {\n          if (isChange(result)) {\n            return getChangeValue(result);\n          }\n\n          const baseContent = this.safeGet(content, baseKey);\n          const subContent = this.getDeep(baseContent, remaining.join('.'));\n          const subChanges = getSubObject(changes, key);\n          // give back an object that can further retrieve changes and/or content\n          const tree = new ObjectTreeNode(subChanges, subContent, this.getDeep, this.isObject);\n          return tree.proxy;\n        } else if (typeof result !== 'undefined') {\n          return result;\n        }\n      }\n\n      // this comes after the isObject check to ensure we don't lose remaining keys\n      if (isChange(baseChanges) && remaining.length === 0) {\n        return getChangeValue(baseChanges);\n      }\n    }\n\n    // return getters/setters/methods on BufferedProxy instance\n    if (baseKey in this || key in this) {\n      return this.getDeep(this, key);\n    }\n\n    const subContent = this.maybeUnwrapProxy(this.getDeep(content, key));\n    if (this.isObject(subContent)) {\n      let subChanges = this.getDeep(changes, key);\n      if (!subChanges) {\n        // if no changes, we need to add the path to the existing changes (mutate)\n        // so further access to nested keys works\n        subChanges = this.getDeep(this.setDeep(changes, key, {}), key);\n      }\n\n      // may still access a value on the changes or content objects\n      const tree = new ObjectTreeNode(subChanges, subContent, this.getDeep, this.isObject);\n      return tree.proxy;\n    } else if (Array.isArray(subContent)) {\n      let subChanges = this.getDeep(changes, key);\n      if (!subChanges) {\n        // return array of contents. Dont need to worry about further access sibling keys in array case\n        return subContent;\n      }\n\n      if (isObject(subChanges)) {\n        if (isObject(subContent)) {\n          subChanges = normalizeObject(subChanges, this.isObject);\n          return { ...subContent, ...subChanges };\n        } else if (Array.isArray(subContent)) {\n          subChanges = normalizeObject(subChanges, this.isObject);\n\n          return objectToArray(mergeDeep(arrayToObject(subContent), subChanges));\n        }\n      }\n\n      return subChanges;\n    }\n\n    return subContent;\n  }\n\n  set<T>(key: string, value: T): void {\n    if (this.hasOwnProperty(key) || keyInObject(this, key)) {\n      this[key] = value;\n    } else {\n      this.setUnknownProperty(key, value);\n    }\n  }\n}\n\n/**\n * Creates new changesets.\n */\nexport function changeset(\n  obj: object,\n  validateFn?: ValidatorAction,\n  validationMap?: ValidatorMap | null | undefined,\n  options?: Config\n): BufferedChangeset {\n  return new BufferedChangeset(obj, validateFn, validationMap, options);\n}\n\ntype T20 = InstanceType<typeof BufferedChangeset>;\n\nexport class ValidatedChangeset {\n  /**\n   * Changeset factory class if you need to extend\n   *\n   * @class ValidatedChangeset\n   * @constructor\n   */\n  constructor(\n    obj: object,\n    validateFn?: ValidatorAction,\n    validationMap?: ValidatorMap | null | undefined,\n    options?: Config\n  ) {\n    const c: BufferedChangeset = changeset(obj, validateFn, validationMap, options);\n\n    return new Proxy(c, {\n      get(targetBuffer, key /*, receiver*/) {\n        const res = targetBuffer.get(key.toString());\n        return res;\n      },\n\n      set(targetBuffer, key, value /*, receiver*/) {\n        targetBuffer.set(key.toString(), value);\n        return true;\n      }\n    }) as T20;\n  }\n}\n\nexport function Changeset(\n  obj: object,\n  validateFn?: ValidatorAction,\n  validationMap?: ValidatorMap | null | undefined,\n  options?: Config\n): BufferedChangeset {\n  const c: BufferedChangeset = changeset(obj, validateFn, validationMap, options);\n\n  return new Proxy(c, {\n    get(targetBuffer, key /*, receiver*/) {\n      const res = targetBuffer.get(key.toString());\n      return res;\n    },\n\n    set(targetBuffer, key, value /*, receiver*/) {\n      targetBuffer.set(key.toString(), value);\n      return true;\n    }\n  });\n}\n"],"names":["get","__values","__spread","__read","keys"],"mappings":"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"}